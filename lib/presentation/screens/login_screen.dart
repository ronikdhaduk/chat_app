import 'package:chat_app/config/theme/app_theme.dart';import 'package:chat_app/data/services/service_locator.dart';import 'package:chat_app/presentation/screens/sign_up_screen.dart';import 'package:chat_app/router/app_router.dart';import 'package:flutter/gestures.dart';import 'package:flutter/material.dart';import '../../core/common/custom_button.dart';import '../../core/common/custom_text_field.dart';class LoginScreen extends StatefulWidget {  const LoginScreen({super.key});  @override  State<LoginScreen> createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  final _formKey = GlobalKey<FormState>();  final TextEditingController emailController = TextEditingController();  final TextEditingController passwordController = TextEditingController();  bool isPasswordVisible = true;  final _emailFocus = FocusNode();  final _passwordFocus = FocusNode();  @override  void dispose() {    emailController.dispose();    passwordController.dispose();    _emailFocus.dispose();    _passwordFocus.dispose();    super.dispose();  }  String? _validateEmail(String? value) {    if (value == null || value.isEmpty) {      return "Please enter your email address";    }    final emailRegex = RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$');    if (!emailRegex.hasMatch(value)) {      return 'Enter a valid email address (e.g., example@gmail.com)';    }    return null;  }  String? _validatePassword(String? value) {    if (value == null || value.isEmpty) {      return "Please enter a password";    }    if (value.length < 6) {      return "Password must be at least 6 characters long";    }    return null;  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: SafeArea(        child: Form(          key: _formKey,          child: SingleChildScrollView(            padding: const EdgeInsets.symmetric(horizontal: 20.0),            child: Column(              crossAxisAlignment: CrossAxisAlignment.start,              children: [                SizedBox(height: 30),                Text(                  "Welcome Back",                  style: Theme.of(context).textTheme.headlineMedium?.copyWith(                    fontWeight: FontWeight.bold,                  ),                ),                SizedBox(height: 10),                Text(                  "Sign in to continue",                  style: Theme.of(                    context,                  ).textTheme.bodyLarge?.copyWith(color: Colors.grey),                ),                SizedBox(height: 30),                CustomTextField(                  controller: emailController,                  focusNode: _emailFocus,                  validator: _validateEmail,                  hintText: "Enter Email",                  prefixIcon: Icon(Icons.email_outlined),                ),                SizedBox(height: 16),                CustomTextField(                  controller: passwordController,                  focusNode: _passwordFocus,                  validator: _validatePassword,                  hintText: "Enter Password",                  obscureText: isPasswordVisible,                  prefixIcon: Icon(Icons.lock_outline),                  suffixIcon: IconButton(onPressed: (){                    setState(() {                      isPasswordVisible = !isPasswordVisible;                    });                  }, icon: Icon(isPasswordVisible ? Icons.visibility : Icons.visibility_off)),                ),                SizedBox(height: 30),                CustomButton(                  onPressed: () {                    FocusScope.of(context).unfocus();                    if (_formKey.currentState?.validate() ?? false) {}                  },                  text: "Login",                ),                SizedBox(height: 20),                Center(                  child: RichText(                    text: TextSpan(                      text: "Don't have an account?  ",                      style: TextStyle(color: Colors.grey.shade600),                      children: [                        TextSpan(                          text: "Sign up",                          style: Theme.of(                            context,                          ).textTheme.bodyLarge?.copyWith(                            color: AppTheme.primaryColor,                            fontWeight: FontWeight.bold,                          ),                          recognizer:                              TapGestureRecognizer()                                ..onTap = () {                                  // Navigator.push(                                  //   context,                                  //   MaterialPageRoute(                                  //     builder: (context) => SignUpScreen(),                                  //   ),                                  // );                                  getIt<AppRouter>().push(SignUpScreen());                                },                        ),                      ],                    ),                  ),                ),              ],            ),          ),        ),      ),    );  }}